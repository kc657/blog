baseurl = "/"
languageCode = "en-us"
title = "Compiling Kevin Chen - Full-Stack Developer"
theme = "hugo-strata-theme"
disqusShortname = ""
# Enable Google Analytics by inserting your tracking code
googleAnalytics = "UA-107131038-1"
# Define how many posts should appear on a site
paginate = 10

[params]
	# To provide some metadata for search engines feel free to add a few
    # information about you and your website.
	name = "Kevin Chen"
	description = "Compiling some of my thoughts.."

	# Format dates with Go's time formatting
	date_format = "2006-01-02"

	# Add custom assets with their paths relative to the static folder
	custom_js   = []
	custom_css  = []


	[params.sidebar]
		# Replace the avatar with a picture of your own under static/images
		avatar = "avatar.jpg"
		# Use Markdown to format the string. This works nearly all over the theme
		bio = "**I'm Kevin Chen**, full-stack developer and motorcycle enthusiast. This is where I will share my journey."
		# The icons will be shown if you enter your username
		twitter = "kvn0218"
		github = "kc657"
		dribbble = ""
		facebook = ""
		googleplus = ""
		flickr = ""
		linkedin = "kc657"

		copyright = [
		]


	[params.about]
		hide  = false
		title = "Full-Stack Developer"
		content = "Driven with an expectation of excellence, I receive satisfaction by solving complex problems systematically. Development provides a perfect environment for that endeavor and an ever-expanding set of tools to experiment with."


	[params.portfolio]
		hide  = false
		title = "Recent Projects"

		# The images and thumbnails are stored under static/images
		# Create and change subfolders as you like
	 	[[params.portfolio.gallery]]
			image = "docubot-second.png"
			thumb = "docubot-demo.gif"
			title = "DocuBot - https://github.com/kc657/DocumentationDashbot"
			description = "DocuBot is a documentation chatbot powered by actionable analytics. I used DialogFlow and a custom webhook to build a natural and rich conversational experiences. Next, I integrated our DialogFlow chatbot with Dashbot, a platform that provides actionable bot analytics. Dashbot became the center of our solution because of the data we were able to extract from it. Data such as conversational flow and top intents highlight how users are interacting with our documentation. Check out my blog post to learn more about it!"

		[[params.portfolio.gallery]]
			image = "articulat-second.png"
			thumb = "articulat.png"
			title = "Articulat.in - https://github.com/kc657/Articulatin-Frontend"
			description = "Articulat.in an IBM Watson powered MERN stack application. It helps speech preparation by analyzing text differential of a written transcript and user's voice recording. The scoring algorithm in place is the result of solving the longest common subsequence problem and the common substrings problem."

		[[params.portfolio.gallery]]
			image = "Kumu-second.png"
			thumb = "kumu-gif.gif"
			title = "Kumu - https://github.com/kc657/Kumu-Rails"
			description = "Kumu is a Ruby on Rails application that gives students a space to share their notes and feedback with each other. Students interact with each other's notes through comments and up/down voting. Additionally the App will feature the ability to create an account, have custom information on a user profile, and keep track of user stats."

		[[params.portfolio.gallery]]
			image = "waywayfar-second.png"
			thumb = "waywayfar.png"
			title = "Waywayfar - https://github.com/kc657/project-wayfar-frontend"
			description = "Waywayfar is a MERN stack application with authentication. This social media site allow users to share posts about his/her favorite place in a city. The user can include a description and a photo for each post. This full CRUD application also allow users to edit or delete posts."

		[[params.portfolio.gallery]]
			image = "melange-second.jpeg"
			thumb = "melange-front.jpeg"
			title = "Mélange - https://github.com/kc657/Melange-Food-API"
			description = "Mélange API provides the hungry user with a tool to take ingredients they have in their pantry and search for new recipes! By integrating the Edamam Recipe Search API, the user is able to search for recipes using multiple ingredients in their inventory. The app returns a matching recipe the user can then save to the database and generate a list of saved recipes they want to cook."

		[[params.portfolio.gallery]]
			image = ""
			thumb = ""
			title = ""
			description =	"	"

	[params.recentposts]
		hide  = false
		title = "Blog Posts"

	[params.contact]
		hide  = false
		title = "Get In Touch"
		content = "Feel free to reach out to me with any questions you may have!"

		address = [
			"255 Bush Street",
			"San Francisco",
			"United States"
		]
		phone = ""

		# Since this template is static, the contact form uses www.formspree.io as a
		# proxy. The form makes a POST request to their servers to send the actual
		# email. Visitors can send up to a 1000 emails each month for free.
	    #
	    # What you need to do for the setup?
	    #
	    # - set your email address under 'email' below
	    # - upload the generated site to your server
	    # - send a dummy email yourself to confirm your account
	    # - click the confirm link in the email from www.formspree.io
	    # - you're done. Happy mailing!
		email = "kvn.0218@gmail.com"

		[params.contact.form]
			# Set custom strings for the form if your native
			# language isn't English
			name = "Name"
			email = "Email"
			message = "Message"
			submit = "Send message"


# Menu links that appear on the left sidebar
[[menu.main]]
	name = "Home"
	url  = "/"
	weight = 0

[[menu.main]]
	name = "About"
	url  = "about"
	weight = 5

[[menu.main]]
	name = "Blog"
	url  = "post/"
	weight = 10
